{"ast":null,"code":"var _jsxFileName = \"/Users/clau/Documents/React/gif-expert-app/src/components/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GifGrid = ({\n  category\n}) => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    getGifs();\n  }, []); //Trae imagenes\n\n  const getGifs = async () => {\n    const respuesta = await fetch(`https://api.giphy.com/v1/gifs/search?q=${category}&api_key=2nJuzvi2p6kRAxrr8yqM77ejiNgcIx4g`);\n    const {\n      data\n    } = await respuesta.json();\n    const gifs = data.map(images => {\n      return {\n        id: images.id,\n        title: images.title,\n        url: images.images.downsized_medium.url\n      };\n    });\n    setImages(gifs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, { ...img\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\nexport default GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/Users/clau/Documents/React/gif-expert-app/src/components/GifGrid.js"],"names":["React","useState","useEffect","GifGridItem","GifGrid","category","images","setImages","getGifs","respuesta","fetch","data","json","gifs","map","id","title","url","downsized_medium","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEhC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT,CAJgC,CAQhC;;AACA,QAAMA,OAAO,GAAG,YAAW;AACzB,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAC1B,0CAAyCL,QAAS,2CADxB,CAA7B;AAGA,UAAM;AAACM,MAAAA;AAAD,QAAQ,MAAMF,SAAS,CAACG,IAAV,EAApB;AAEA,UAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAAUR,MAAD,IAAU;AAC9B,aAAM;AACJS,QAAAA,EAAE,EAAET,MAAM,CAACS,EADP;AAEJC,QAAAA,KAAK,EAAEV,MAAM,CAACU,KAFV;AAGJC,QAAAA,GAAG,EAAEX,MAAM,CAACA,MAAP,CAAcY,gBAAd,CAA+BD;AAHhC,OAAN;AAMD,KAPY,CAAb;AAQAV,IAAAA,SAAS,CAACM,IAAD,CAAT;AACD,GAfD;;AAmBA,sBACE;AAAA,4BACA;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAKMC,MAAM,CAACQ,GAAP,CAAYK,GAAD,iBAEV,QAAC,WAAD,OAA8BA;AAA9B,SAAkBA,GAAG,CAACJ,EAAtB;AAAA;AAAA;AAAA;AAAA,cAFD;AALN;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAmBD,CA/CD;;GAAMX,O;;KAAAA,O;AAiDN,eAAeA,OAAf","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n\n  const [images, setImages]=useState([]);\n\n  useEffect(()=>{\n    getGifs();\n  },[]);\n   \n  //Trae imagenes\n  const getGifs = async() => {\n    const respuesta = await fetch(\n      `https://api.giphy.com/v1/gifs/search?q=${category}&api_key=2nJuzvi2p6kRAxrr8yqM77ejiNgcIx4g`\n    );\n    const {data}= await respuesta.json();\n\n    const gifs = data.map((images)=>{\n      return{\n        id: images.id,\n        title: images.title,\n        url: images.images.downsized_medium.url\n      }\n        \n    })\n    setImages(gifs);    \n  };\n\n\n\n  return (\n    <>\n    <h3>{category}</h3>\n    <hr/>\n    <div className=\"card-wrapper\">\n      \n      \n        \n        {\n          images.map((img)=>\n          (\n           <GifGridItem key={img.id} {...img}/>))\n          }\n        \n          \n        \n    </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n"]},"metadata":{},"sourceType":"module"}